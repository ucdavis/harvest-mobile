trigger:
  branches:
    include:
      - main
pr:
  branches:
    include:
      - "*"

variables:
  - group: Secrets
  - name: NODE_VERSION
    value: "20.x"

stages:
  - stage: CI
    displayName: Lint/Test
    jobs:
      - job: checks
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "$(NODE_VERSION)"
            displayName: "Use Node $(NODE_VERSION)"
          - script: corepack enable
            displayName: "Enable Corepack (pnpm/yarn if you use them)"

          # try caching but we can remove if it causes issues
          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/package-lock.json'
              path: "$(Pipeline.Workspace)/.npm"
              restoreKeys: 'npm | "$(Agent.OS)" |'
            displayName: "Cache NPM"
          - script: |
              export NPM_CONFIG_CACHE="$(Pipeline.Workspace)/.npm"
              npm ci
            displayName: "Install deps"
          - script: npm run test --if-present
            displayName: "Run tests"

      # --- iOS PREVIEW for PRs ---
      - job: ios_preview
        dependsOn: checks
        displayName: "iOS (preview) on PR"
        condition: eq(variables['Build.Reason'], 'PullRequest')
        pool: { vmImage: "ubuntu-latest" }
        steps:
          - task: NodeTool@0
            inputs: { versionSpec: "$(NODE_VERSION)" }
          - script: npm ci
            displayName: "Install deps"
          - script: npx --yes eas-cli@latest build \
              --platform ios \
              --profile preview \
              --non-interactive \
              --no-wait
            env:
              EXPO_TOKEN: $(EXPO_TOKEN)
            displayName: "Trigger EAS iOS (preview)"

      # --- iOS PROD on main ---
      - job: ios_prod
        dependsOn: checks
        displayName: "iOS (production)"
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        pool: { vmImage: "ubuntu-latest" }
        steps:
          - task: NodeTool@0
            inputs: { versionSpec: "$(NODE_VERSION)" }
          - script: npm ci
            displayName: "Install deps"
          - script: npx --yes eas-cli@latest build \
              --platform ios \
              --profile production \
              --non-interactive \
              --no-wait \
              --auto-submit
            env:
              EXPO_TOKEN: $(EXPO_TOKEN)
            displayName: "Trigger EAS iOS (prod + submit)"
